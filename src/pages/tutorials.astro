---
import Layout from '../layouts/Layout.astro';
import Footer from '../components/Footer.astro';
import { tutorials } from '../data/tutorials';

// 提取所有教程类别和难度级别
const categories = [...new Set(tutorials.map(tutorial => tutorial.category))];
const difficulties = ['初级', '中级', '高级'];
---

<Layout title="应用教程 - 雁鸣AI研习社">
  <!-- Header -->
  <header class="fixed top-0 left-0 right-0 bg-white/80 backdrop-blur-md z-50 border-b border-gray-100">
    <div class="container mx-auto px-4 md:px-6 py-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-2">
          <a href="/" class="flex items-center space-x-2">
            <div class="w-10 h-10">
              <svg viewBox="0 0 40 40" class="w-full h-full">
                <path d="M20 5C11.729 5 5 11.729 5 20C5 28.271 11.729 35 20 35C28.271 35 35 28.271 35 20C35 11.729 28.271 5 20 5ZM20 10C22.757 10 25 12.243 25 15C25 17.757 22.757 20 20 20C17.243 20 15 17.757 15 15C15 12.243 17.243 10 20 10ZM20 31C16.875 31 14.025 29.535 12.175 27.2C12.23 23.6 19.4 21.6 20 21.6C20.6 21.6 27.77 23.6 27.825 27.2C25.975 29.535 23.125 31 20 31Z" fill="#5E5ADB"/>
              </svg>
            </div>
            <div>
              <h1 class="text-lg font-semibold">雁鸣AI研习社</h1>
              <p class="text-xs text-gray-500">AI Agent Innovation Hub</p>
            </div>
          </a>
        </div>
        
        <nav class="hidden md:flex items-center space-x-8">
          <a href="/agents" class="text-sm hover:text-indigo-600 transition-colors">智能体展示</a>
          <a href="/tutorials" class="text-sm text-indigo-600 font-medium">应用教程</a>
          <a href="/#resources" class="text-sm hover:text-indigo-600 transition-colors">资源分享</a>
          <a href="/#blog" class="text-sm hover:text-indigo-600 transition-colors">博客文章</a>
          <a href="/#contact" class="text-sm hover:text-indigo-600 transition-colors">联系我们</a>
        </nav>
        
        <button class="md:hidden" id="mobile-menu-button">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Mobile menu -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-4 py-3 space-y-2">
        <a href="/agents" class="block hover:text-indigo-600 transition-colors">智能体展示</a>
        <a href="/tutorials" class="block text-indigo-600 font-medium">应用教程</a>
        <a href="/#resources" class="block hover:text-indigo-600 transition-colors">资源分享</a>
        <a href="/#blog" class="block hover:text-indigo-600 transition-colors">博客文章</a>
        <a href="/#contact" class="block hover:text-indigo-600 transition-colors">联系我们</a>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="container mx-auto px-4 md:px-6 pt-28 pb-16">
    <div class="mb-10">
      <h1 class="text-3xl font-bold mb-2">AIGC 应用教程</h1>
      <p class="text-gray-600 max-w-3xl">探索AI生成内容的前沿技术与应用，从入门到精通的专业教程，助力您掌握AIGC工具与技能。</p>
    </div>
    
    <!-- Filters -->
    <div class="mb-8">
      <div class="flex flex-col md:flex-row gap-4">
        <div>
          <h3 class="text-sm font-medium mb-2">按类别筛选：</h3>
          <div class="flex flex-wrap gap-2">
            <button class="category-btn active px-4 py-2 rounded-full text-sm bg-indigo-100 text-indigo-700 hover:bg-indigo-200 transition-colors" data-category="all">全部</button>
            {categories.map(category => (
              <button class="category-btn px-4 py-2 rounded-full text-sm bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors" data-category={category}>{category}</button>
            ))}
          </div>
        </div>
        
        <div>
          <h3 class="text-sm font-medium mb-2">按难度筛选：</h3>
          <div class="flex flex-wrap gap-2">
            <button class="difficulty-btn active px-4 py-2 rounded-full text-sm bg-indigo-100 text-indigo-700 hover:bg-indigo-200 transition-colors" data-difficulty="all">全部</button>
            {difficulties.map(difficulty => (
              <button class="difficulty-btn px-4 py-2 rounded-full text-sm bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors" data-difficulty={difficulty}>{difficulty}</button>
            ))}
          </div>
        </div>
      </div>
    </div>
    
    <!-- Tutorials Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="tutorials-grid">
      {tutorials.map(tutorial => (
        <div class="tutorial-card bg-white border border-gray-100 rounded-xl overflow-hidden hover:shadow-md transition-shadow duration-300" data-category={tutorial.category} data-difficulty={tutorial.difficulty}>
          <div class="h-48 bg-gray-100 relative overflow-hidden">
            <img src={tutorial.coverImage || '/images/tutorials/default.jpg'} alt={tutorial.title} class="w-full h-full object-cover" />
          </div>
          <div class="p-6">
            <div class="flex items-center justify-between mb-4">
              <span class="inline-block px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-700">{tutorial.category}</span>
              <span class={`inline-block px-2 py-1 text-xs rounded-full ${
                tutorial.difficulty === '初级' ? 'bg-green-50 text-green-600' :
                tutorial.difficulty === '中级' ? 'bg-yellow-50 text-yellow-600' :
                'bg-red-50 text-red-600'
              }`}>{tutorial.difficulty}</span>
            </div>
            <h3 class="font-semibold text-lg mb-2">{tutorial.title}</h3>
            <p class="text-gray-600 text-sm mb-4 line-clamp-2">{tutorial.description}</p>
            <div class="flex items-center justify-between">
              <div class="flex items-center text-sm text-gray-500">
                <span>{tutorial.author}</span>
                <span class="mx-2">•</span>
                <span>{new Date(tutorial.publishDate).toLocaleDateString('zh-CN')}</span>
              </div>
              <a href={`/tutorial/${tutorial.id}`} class="text-indigo-600 hover:text-indigo-700 text-sm font-medium">阅读教程 →</a>
            </div>
          </div>
        </div>
      ))}
    </div>
  </main>

  <Footer />
</Layout>

<script>
  // 筛选功能
  document.addEventListener('DOMContentLoaded', () => {
    // 移动端菜单
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
    
    // 类别筛选
    const categoryButtons = document.querySelectorAll('.category-btn');
    const difficultyButtons = document.querySelectorAll('.difficulty-btn');
    const tutorialCards = document.querySelectorAll('.tutorial-card');
    
    let activeCategory = 'all';
    let activeDifficulty = 'all';
    
    function updateFilters() {
      tutorialCards.forEach(card => {
        const cardCategory = card.dataset.category;
        const cardDifficulty = card.dataset.difficulty;
        
        const categoryMatch = activeCategory === 'all' || cardCategory === activeCategory;
        const difficultyMatch = activeDifficulty === 'all' || cardDifficulty === activeDifficulty;
        
        if (categoryMatch && difficultyMatch) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }
    
    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        categoryButtons.forEach(btn => btn.classList.remove('active', 'bg-indigo-100', 'text-indigo-700'));
        categoryButtons.forEach(btn => btn.classList.add('bg-gray-100', 'text-gray-700'));
        button.classList.remove('bg-gray-100', 'text-gray-700');
        button.classList.add('active', 'bg-indigo-100', 'text-indigo-700');
        
        activeCategory = button.dataset.category;
        updateFilters();
      });
    });
    
    difficultyButtons.forEach(button => {
      button.addEventListener('click', () => {
        difficultyButtons.forEach(btn => btn.classList.remove('active', 'bg-indigo-100', 'text-indigo-700'));
        difficultyButtons.forEach(btn => btn.classList.add('bg-gray-100', 'text-gray-700'));
        button.classList.remove('bg-gray-100', 'text-gray-700');
        button.classList.add('active', 'bg-indigo-100', 'text-indigo-700');
        
        activeDifficulty = button.dataset.difficulty;
        updateFilters();
      });
    });
  });
</script>